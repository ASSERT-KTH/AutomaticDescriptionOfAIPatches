@@ -55,6 +55,15 @@
        );
    }

+    @Test
+    public void givenNetworkWasConnected_whenNotifyingOfInitialState_thenForwardsNetworkAvailableToListener() {
+        givenNetworkWas(CONNECTED);
+
+        connectivityChangesForwarder.forwardInitialNetworkStatus();
+
+        verify(bindCallbackManager).onMerlinBind(AVAILABLE_NETWORK);
+    }
+
    @Test
    public void givenNetworkWasDisconnected_whenNotifyingOfInitialState_thenForwardsNetworkUnavailableToListener() {
        givenNetworkWas(DISCONNECTED);
